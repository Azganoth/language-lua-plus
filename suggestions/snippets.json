{
  "keywords": [
    {
      "text": "local",
      "type": "keyword",
      "description": "Local statement.",
      "descriptionMoreURL": "#3.3.7"
    }
  ],
  "common": [
    {
      "snippet": "${1:variableName} = ${0:any}",
      "type": "variable",
      "rightLabel": "variableName = any",
      "description": "Variable declaration.",
      "descriptionMoreURL": "#3.2",
      "replacementPrefix": "var"
    },
    {
      "snippet": "local ${1:variableName}${2: = ${0:any}}",
      "type": "variable",
      "rightLabel": "local variableName [= any]",
      "description": "Local variable declaration.",
      "descriptionMoreURL": "#3.3.7",
      "replacementPrefix": "varl"
    },
    {
      "snippet": ":: ${1:labelName} ::$0",
      "type": "snippet",
      "rightLabel": ":: labelName ::",
      "description": "Label statement.",
      "descriptionMoreURL": "#3.3.4",
      "replacementPrefix": "label"
    },
    {
      "snippet": "goto ${1:labelName}",
      "type": "snippet",
      "rightLabel": "goto labelName",
      "description": "Goto statement referring to a label.",
      "descriptionMoreURL": "#3.3.4",
      "replacementPrefix": "goto"
    },
    {
      "snippet": "return ${0:any}",
      "type": "snippet",
      "rightLabel": "return [any]",
      "description": "Return values from a function or a chunk.",
      "descriptionMoreURL": "#3.3.4",
      "replacementPrefix": "return"
    }
  ],
  "control_structures": [
    {
      "snippet": "${1:condition} and ${2:any} or ${3:any}",
      "type": "snippet",
      "rightLabel": "condition and any or any",
      "description": "Ternary conditional expression.",
      "replacementPrefix": "tern"
    },
    {
      "snippet": "do\n\t${0:-- code...}\nend",
      "type": "snippet",
      "rightLabel": "do code end",
      "description": "Explicit block.",
      "descriptionMoreURL": "#3.3.1",
      "replacementPrefix": "do"
    },
    {
      "snippet": "if${1: not} ${2:condition} then\n\t${0:-- code...}\nend",
      "type": "snippet",
      "rightLabel": "if [not] condition then 'code' end",
      "description": "If conditional block.",
      "descriptionMoreURL": "#3.3.4",
      "replacementPrefix": "if"
    },
    {
      "snippet": "if${1: not} ${2:condition} then\n\t${3:-- code...}\nelse\n\t${0:-- code...}\nend",
      "type": "snippet",
      "rightLabel": "'ifblock' else 'code' end",
      "description": "If/else conditional block.",
      "descriptionMoreURL": "#3.3.4",
      "replacementPrefix": "ife"
    },
    {
      "snippet": "elseif${1: not} ${2:condition} then\n\t${0:-- code...}\nend",
      "type": "snippet",
      "rightLabel": "'ifblock' elseif [not] condition then 'code' end",
      "description": "Elseif conditional block.",
      "descriptionMoreURL": "#3.3.4",
      "replacementPrefix": "elif"
    },
    {
      "snippet": "else\n\t${0:-- code...}\nend",
      "type": "snippet",
      "rightLabel": "'ifblock' else 'code' end",
      "description": "Else conditional block.",
      "descriptionMoreURL": "#3.3.4",
      "replacementPrefix": "else"
    },
    {
      "snippet": "while${1: not} ${2:condition} do\n\t${0:-- code...}\nend",
      "type": "snippet",
      "rightLabel": "while [not] condition do 'code' end",
      "description": "While loop block.",
      "descriptionMoreURL": "#3.3.4",
      "replacementPrefix": "while"
    },
    {
      "snippet": "repeat\n\t${0:-- code...}\nuntil ${1:condition}",
      "type": "snippet",
      "rightLabel": "repeat 'code' until condition",
      "description": "Repeat loop block.",
      "descriptionMoreURL": "#3.3.4",
      "replacementPrefix": "repeat"
    },
    {
      "snippet": "for ${1:i} = ${2:1}, ${3:iEnd}${4:, ${5:iSeq}} do\n\t${0:-- code...}\nend",
      "type": "snippet",
      "rightLabel": "for i = 1, iEnd [, iSeq] do 'code' end",
      "description": "For loop block.",
      "descriptionMoreURL": "#3.3.5",
      "replacementPrefix": "for"
    },
    {
      "snippet": "for ${1:key}, ${2:value} in pairs(${3:object}) do\n\t${0:-- code...}\nend",
      "type": "snippet",
      "rightLabel": "for key, value in pairs(object) do 'code' end",
      "description": "For in loop block with pairs function.",
      "descriptionMoreURL": "#3.3.5",
      "replacementPrefix": "forp"
    },
    {
      "snippet": "for ${1:index}, ${2:value} in ipairs(${3:object}) do\n\t${0:-- code...}\nend",
      "type": "snippet",
      "rightLabel": "for index, value in ipairs(object) do 'code' end",
      "description": "For in loop block with ipairs function.",
      "descriptionMoreURL": "#3.3.5",
      "replacementPrefix": "fori"
    }
  ],
  "functions": [
    {
      "snippet": "function ${1:functionName}(${2:...})\n\t${0:-- code...}\nend",
      "type": "snippet",
      "rightLabel": "function functionName(...) 'code' end",
      "description": "Function statement.",
      "descriptionMoreURL": "#3.4.11",
      "replacementPrefix": "fun"
    },
    {
      "snippet": "${1:functionName} = function (${2:...})\n\t${0:-- code...}\nend",
      "type": "snippet",
      "rightLabel": "functionName = function(...) 'code' end",
      "description": "Function definition (anonymous).",
      "descriptionMoreURL": "#3.4.11",
      "replacementPrefix": "fundef"
    }
  ]
}
