{
  "id": "lua",
  "name": "Lua",
  "type": "tree-sitter",
  "parser": "tree-sitter-lua",
  "legacyScopeName": "source.lua",

  "fileTypes": [ "lua" ],

  "folds": [
    {
      "start": {"type": "(", "index": "0"},
      "end": {"type": ")", "index": "-1"}
    },
    {
      "start": {"type": "[", "index": "0"},
      "end": {"type": "]", "index": "-1"}
    },
    {
      "start": {"type": "{", "index": "0"},
      "end": {"type": "}", "index": "-1"}
    }
  ],

  "comments": {
    "start": "-- "
  },

  "scopes": {
    "lua": "source.lua",

    "comment": "comment",
    "string": "string",
    "number": "constant.numberic",

    "function > function_name > identifier": "entity.name.function",
    "function > function_name > property_identifier": "entity.name.function",
    "function > function_name > method": "entity.name.function",
    "function > parameters > identifier": "variable.parameter",
    "function > 'end'": "storage.type.function",

    "local_function > identifier": "entity.name.function",
    "local_function > parameters > identifier": "variable.parameter",
    "local_function > 'end'": "storage.type.function",

    "function_call > identifier": "entity.name.function",
    "function_call > method": "entity.name.function",

    "function_definition > parameters > identifier": "variable.parameter",
    "function_definition > 'end'": "storage.type.function",

    "this": "variable.language",
    "self": "variable.language",
    "spread": "variable.parameter",
    "'_G'": "variable.language",
    "'_VERSION'": "variable.language",

    "nil": "constant.language",
    "true": "constant.language.boolean",
    "false": "constant.language.boolean",

    "'local'": "storage.modifier",
    "'function'": "storage.type.function",
    "label_statement": "storage.type.label",

    "'{'": "punctuation.definition.table.begin.bracket.curly",
    "'}'": "punctuation.definition.table.end.bracket.curly",

    "'do'": "keyword.control",
    "'return'": "keyword.control",
    "'if'": "keyword.control",
    "'then'": "keyword.control",
    "'elseif'": "keyword.control",
    "'else'": "keyword.control",
    "'while'": "keyword.control",
    "'repeat'": "keyword.control",
    "'until'": "keyword.control",
    "'for'": "keyword.control",
    "'in'": "keyword.control",
    "'goto'": "keyword.control",
    "'end'": "keyword.control",

    "'or'": "keyword.operator.logical",
    "'and'": "keyword.operator.logical",
    "'not'": "keyword.operator.logical",

    "'='": "keyword.operator",
    "'<'": "keyword.operator",
    "'<='": "keyword.operator",
    "'=='": "keyword.operator",
    "'~='": "keyword.operator",
    "'>='": "keyword.operator",
    "'>'": "keyword.operator",
    "'|'": "keyword.operator",
    "'~'": "keyword.operator",
    "'&'": "keyword.operator",
    "'<<'": "keyword.operator",
    "'>>'": "keyword.operator",
    "'+'": "keyword.operator",
    "'-'": "keyword.operator",
    "'*'": "keyword.operator",
    "'/'": "keyword.operator",
    "'//'": "keyword.operator",
    "'%'": "keyword.operator",

    "'..'": "keyword.operator",
    "'^'": "keyword.operator",

    "'#'": "keyword.operator",

    "'.'": "meta.delimiter",
    "','": "meta.delimiter",
    "';'": "meta.delimiter"
  }
}
