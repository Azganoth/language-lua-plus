{
  "scopeName": "source.lua",
  "name": "Lua",

  "fileTypes": [ "lua" ],

  "patterns": [
    {
      "comment": "Single-line comment",
      "name": "comment.line.double-dash.lua",
      "match": "--(?!\\[=*\\[).*",
      "captures": {
        "1": { "name": "punctuation.definition.comment.lua"}
      }
    },
    {
      "comment": "Multi-line comment",
      "name": "comment.line.block.lua",
      "begin": "--\\[(=*)\\[",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.comment.begin.lua" }
      },
      "end": "\\]\\1\\]",
      "endCaptures": {
        "0": { "name": "punctuation.definition.comment.begin.lua" }
      }
    },

    {
      "comment": "String (single quoted)",
      "begin": "'",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.string.begin.lua" }
      },
      "end": "'",
      "endCaptures": {
        "0": { "name": "punctuation.definition.string.end.lua" }
      },
      "name": "string.quoted.single.lua",
      "patterns": [
        {
          "comment": "Special characters",
          "match": "\\\\([abfnrtv']|\\d{1,3}|[xX]\\h\\h|u\\{\\h{,7}\\})",
          "name": "constant.character.escape.lua"
        }
      ]
    },
    {
      "comment": "String (double quoted)",
      "begin": "\"",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.string.begin.lua" }
      },
      "end": "\"",
      "endCaptures": {
        "0": { "name": "punctuation.definition.string.end.lua" }
      },
      "name": "string.quoted.double.lua",
      "patterns": [
        {
          "comment": "Special characters",
          "match": "\\\\([abfnrtv\"]|\\d{1,3}|[xX]\\h\\h|u\\{\\h{,7}\\})",
          "name": "constant.character.escape.lua"
        }
      ]
    },
    {
      "comment": "String (multiline)",
      "begin": "(?<!--)\\[(=*)\\[",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.string.begin.lua" }
      },
      "end": "\\]\\1\\]",
      "endCaptures": {
        "0": { "name": "punctuation.definition.string.end.lua" }
      },
      "name": "string.quoted.single.lua",
      "patterns": [
        {
          "comment": "Special characters",
          "match": "\\\\([abfnrtv\\[\\]]|\\d{1,3}|[xX]\\h\\h|u\\{\\h{,7}\\})",
          "name": "constant.character.escape.lua"
        }
      ]
    },

    {
      "comment": "Functions",
      "match": "\\b(function)(?:\\s+([a-zA-Z_.:]+[.:])?([a-zA-Z_]\\w*)\\s*)?(\\()([^)]*)(\\))",
      "name": "meta.function.lua",
      "captures": {
        "1": {
          "name": "keyword.control.lua"
        },
        "2": {
          "name": "entity.name.function.scope.lua"
        },
        "3": {
          "name": "entity.name.function.lua"
        },
        "4": {
          "name": "punctuation.definition.parameters.begin.lua"
        },
        "5": {
          "name": "variable.parameter.function.lua"
        },
        "6": {
          "name": "punctuation.definition.parameters.end.lua"
        }
      }
    },

    {
      "comment": "Metamethods",
      "match": "(?<!^\\.|[^.]\\.|:)\\b(__(?:add|call|concat|div|eq|index|len|le|lt|mod|mode|mul|newindex|pow|sub|unm)|print)\\b",
      "name": "support.function.metamethod.lua"
    },

    {
      "comment": "Variables (language)",
      "match": "(?<!^\\.|[^.]\\.|:)\\b(self|this)\\b|((?<![.])\\.{3}(?!\\.)|_G|_VERSION)",
      "name": "variable.language.lua"
    },

    {
      "comment": "Constants",
      "match": "(?<!^\\.|[^.]\\.|:)\\b(true|nil|false)\\b",
      "name": "constant.language.lua"
    },

    {
      "comment": "Numeric",
      "match": "(?<![\\d.])\\b0[xX][a-fA-F\\d\\.]+([pP][\\-\\+]?\\d+)?|\\b\\d+(\\.\\d+)?([eE]-?\\d+)?|\\.\\d+([eE]-?\\d+)?",
      "name": "constant.numeric.lua"
    },

    {
      "comment": "Keywords",
      "match": "\\b(break|do|else|for|if|elseif|return|then|repeat|while|until|end|function|local|in)\\b",
      "name": "keyword.control.lua"
    },

    {
      "comment": "Lua basic functions",
      "match": "(?<!^\\.|[^.]\\.|:)\\b(assert|collectgarbage|dofile|error|getfenv|getmetatable|ipairs|load|loadfile|loadstring|next|pairs |pcall|rawequal|rawset|select|setfenv|setmetatable|tonumber|tostring|type|unpack|xpcall)\\b",
      "name": "support.function.lua"
    },
    {
      "comment": "Lua collections library",
      "match": "(?<!^\\.|[^.]\\.|:)\\b(coroutine\\.(create|resume|running|status|wrap|yield)|debug\\.(debug|getfenv|gethook|getinfo|getlocal|getmetatable|getregistry|getupvalue|setfenv|sethook|setlocal|setmetatable|setupvalue|traceback)|io\\.(close|flush|input|lines|open|output|popen|read|stderr|stdin|stdout|tmpfile|type|write)|file\\:(close|flush|lines|read|seek|stvbuf|write)|match\\.(abs|acos|asin|atan|atan2|ceil|cos|cosh|deg|exp|floor|fmod|frexp|huge|idexp|log|log10|max|min|modf|pi|pow|rad|random|randomseed|sin|sinh|sqrt|tan|tanh)|os\\.(clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)|package\\.(cpath|loaded|loaders|loadlib|path|preload|seeall)|string\\.(byte|char|dump|find|format|gmatch|gsub|len|lower|match|rep|reverse|sub|upper)|table\\.(concat|insert|maxn|remove|sort))\\b",
      "name": "support.function.library.lua"
    },
    {
      "comment": "Lua ponctuation functions library",
      "match": "(?<=\\w|\\)|\\])(:)(?:(byte|char|dump|find|format|gfind|gmatch|gsub|len|lower|match|rep|reverse|sub|trim|upper))\\b",
      "captures": {
        "0": { "name": "support.function.lua" }
      }
    },

    {
      "comment": "Operators (logical)",
      "match": "\\b(and|or|not)\\b",
      "name": "keyword.operator.logical.lua"
    },
    {
      "comment": "Operators",
      "match": "\\b(=|<|<=|==|~=|>=|>|\\||~|&|<<|>>|\\+|-|\\*|/|//|%|(?<!\\.)\\.{2}(?!\\.)|\\^|#)\\b",
      "name": "keyword.operator.lua"
    }
  ]
}
